// <auto-generated />
using System;
using Coding.Challenge.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Coding.Challenge.Repositories.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240203141848_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Coding.Challenge.Repositories.Models.Book", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTimeOffset>("PublishDateUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryId = 1L,
                            Description = "First Book",
                            PublishDateUtc = new DateTimeOffset(new DateTime(2024, 2, 3, 14, 18, 48, 261, DateTimeKind.Unspecified).AddTicks(6090), new TimeSpan(0, 0, 0, 0, 0)),
                            Title = "Book #1"
                        },
                        new
                        {
                            Id = 2L,
                            CategoryId = 1L,
                            Description = "Second Book",
                            PublishDateUtc = new DateTimeOffset(new DateTime(2024, 2, 3, 14, 18, 48, 261, DateTimeKind.Unspecified).AddTicks(6093), new TimeSpan(0, 0, 0, 0, 0)),
                            Title = "Book #2"
                        },
                        new
                        {
                            Id = 3L,
                            CategoryId = 2L,
                            Description = "Third Book",
                            PublishDateUtc = new DateTimeOffset(new DateTime(2024, 2, 3, 14, 18, 48, 261, DateTimeKind.Unspecified).AddTicks(6094), new TimeSpan(0, 0, 0, 0, 0)),
                            Title = "Book #3"
                        },
                        new
                        {
                            Id = 4L,
                            CategoryId = 2L,
                            Description = "Fourth Book",
                            PublishDateUtc = new DateTimeOffset(new DateTime(2024, 2, 3, 14, 18, 48, 261, DateTimeKind.Unspecified).AddTicks(6095), new TimeSpan(0, 0, 0, 0, 0)),
                            Title = "Book #4"
                        },
                        new
                        {
                            Id = 5L,
                            CategoryId = 3L,
                            Description = "Fifth Book",
                            PublishDateUtc = new DateTimeOffset(new DateTime(2024, 2, 3, 14, 18, 48, 261, DateTimeKind.Unspecified).AddTicks(6096), new TimeSpan(0, 0, 0, 0, 0)),
                            Title = "Book #5"
                        });
                });

            modelBuilder.Entity("Coding.Challenge.Repositories.Models.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "First Category"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Second Category"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Third Category"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
